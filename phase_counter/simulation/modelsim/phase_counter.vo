// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Standard Edition"

// DATE "04/27/2018 19:25:37"

// 
// Device: Altera EP4CE30F23I7 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module phase_counter (
	clock,
	reset,
	phase);
input 	clock;
input 	reset;
output 	[2:0] phase;

// Design Ports Information
// phase[0]	=>  Location: PIN_W2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// phase[1]	=>  Location: PIN_W1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// phase[2]	=>  Location: PIN_Y2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clock	=>  Location: PIN_G1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// reset	=>  Location: PIN_T2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("phase_counter_v.sdo");
// synopsys translate_on

wire \phase[0]~output_o ;
wire \phase[1]~output_o ;
wire \phase[2]~output_o ;
wire \clock~input_o ;
wire \clock~inputclkctrl_outclk ;
wire \phase[1]~1_combout ;
wire \reset~input_o ;
wire \reset~inputclkctrl_outclk ;
wire \phase[1]~reg0_q ;
wire \phase~2_combout ;
wire \phase[2]~reg0_q ;
wire \phase~0_combout ;
wire \phase[0]~reg0_q ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y10_N9
cycloneive_io_obuf \phase[0]~output (
	.i(\phase[0]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\phase[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \phase[0]~output .bus_hold = "false";
defparam \phase[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y10_N16
cycloneive_io_obuf \phase[1]~output (
	.i(\phase[1]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\phase[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \phase[1]~output .bus_hold = "false";
defparam \phase[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y10_N23
cycloneive_io_obuf \phase[2]~output (
	.i(\phase[2]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\phase[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \phase[2]~output .bus_hold = "false";
defparam \phase[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y21_N8
cycloneive_io_ibuf \clock~input (
	.i(clock),
	.ibar(gnd),
	.o(\clock~input_o ));
// synopsys translate_off
defparam \clock~input .bus_hold = "false";
defparam \clock~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \clock~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clock~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clock~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clock~inputclkctrl .clock_type = "global clock";
defparam \clock~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X1_Y10_N6
cycloneive_lcell_comb \phase[1]~1 (
// Equation(s):
// \phase[1]~1_combout  = \phase[1]~reg0_q  $ (\phase[0]~reg0_q )

	.dataa(gnd),
	.datab(gnd),
	.datac(\phase[1]~reg0_q ),
	.datad(\phase[0]~reg0_q ),
	.cin(gnd),
	.combout(\phase[1]~1_combout ),
	.cout());
// synopsys translate_off
defparam \phase[1]~1 .lut_mask = 16'h0FF0;
defparam \phase[1]~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y21_N15
cycloneive_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneive_clkctrl \reset~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\reset~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\reset~inputclkctrl_outclk ));
// synopsys translate_off
defparam \reset~inputclkctrl .clock_type = "global clock";
defparam \reset~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X1_Y10_N7
dffeas \phase[1]~reg0 (
	.clk(!\clock~inputclkctrl_outclk ),
	.d(\phase[1]~1_combout ),
	.asdata(vcc),
	.clrn(\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\phase[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \phase[1]~reg0 .is_wysiwyg = "true";
defparam \phase[1]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y10_N24
cycloneive_lcell_comb \phase~2 (
// Equation(s):
// \phase~2_combout  = (\phase[0]~reg0_q  & (\phase[2]~reg0_q  $ (\phase[1]~reg0_q ))) # (!\phase[0]~reg0_q  & (\phase[2]~reg0_q  & \phase[1]~reg0_q ))

	.dataa(gnd),
	.datab(\phase[0]~reg0_q ),
	.datac(\phase[2]~reg0_q ),
	.datad(\phase[1]~reg0_q ),
	.cin(gnd),
	.combout(\phase~2_combout ),
	.cout());
// synopsys translate_off
defparam \phase~2 .lut_mask = 16'h3CC0;
defparam \phase~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y10_N25
dffeas \phase[2]~reg0 (
	.clk(!\clock~inputclkctrl_outclk ),
	.d(\phase~2_combout ),
	.asdata(vcc),
	.clrn(\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\phase[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \phase[2]~reg0 .is_wysiwyg = "true";
defparam \phase[2]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y10_N28
cycloneive_lcell_comb \phase~0 (
// Equation(s):
// \phase~0_combout  = (!\phase[0]~reg0_q  & ((\phase[1]~reg0_q ) # (!\phase[2]~reg0_q )))

	.dataa(\phase[1]~reg0_q ),
	.datab(gnd),
	.datac(\phase[0]~reg0_q ),
	.datad(\phase[2]~reg0_q ),
	.cin(gnd),
	.combout(\phase~0_combout ),
	.cout());
// synopsys translate_off
defparam \phase~0 .lut_mask = 16'h0A0F;
defparam \phase~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y10_N29
dffeas \phase[0]~reg0 (
	.clk(!\clock~inputclkctrl_outclk ),
	.d(\phase~0_combout ),
	.asdata(vcc),
	.clrn(\reset~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\phase[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \phase[0]~reg0 .is_wysiwyg = "true";
defparam \phase[0]~reg0 .power_up = "low";
// synopsys translate_on

assign phase[0] = \phase[0]~output_o ;

assign phase[1] = \phase[1]~output_o ;

assign phase[2] = \phase[2]~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_D1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_K2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_K1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_K22,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
